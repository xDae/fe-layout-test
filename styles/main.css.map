{"version":3,"sources":["_icon-font.scss","main.css","layout/_layout.scss","../../node_modules/jeet/scss/jeet/_grid.scss","_variables.scss","../../node_modules/sass-mq/_mq.scss","layout/_header.scss","../../node_modules/jeet/scss/jeet/_functions.scss","layout/_featured.scss","layout/_sub-home.scss","layout/_footer.scss","components/_header-form.scss","components/_header-nav.scss","components/_featured-box.scss","components/_blog-card.scss","components/_footer-nav.scss","helpers/_helpers.scss","helpers/_typography.scss","main.scss"],"names":[],"mappings":"AAAA,WACE,qBAAwB,AACxB,uCAAQ,AACR,iSAIyD,AACzD,gBAAoB,AACpB,iBAAmB,CAAA,ACSrB,+CDKE,qBAAwB,AACxB,kBAAmB,AACnB,gBAAoB,AACpB,WAAY,AAEZ,qBAAsB,AACtB,wBAAyB,AACzB,UAAW,AACX,kBAAmB,AACnB,kBAAmB,AAInB,oBAAqB,AACrB,oBAAqB,AAGrB,gBAAiB,AAIjB,iBAAkB,AAMlB,mCAAoC,AACpC,iCAAmC,CAIpC,AAED,oBAAsB,eAAiB,CAAI,AEzD3C,aC4KE,WAAY,AACZ,gBCvKa,ADwKb,WAAY,AACZ,cAAe,AAEf,kBACc,AADd,iBAEa,AAGb,kBDrLmC,ACqLnC,kBDrLmC,CAKpC,AG0NO,2BHhOR,aC4KE,WAAY,AACZ,gBCtKa,ADuKb,WAAY,AACZ,cAAe,AAEf,kBACc,AADd,iBAEa,AAGb,kBDlLsC,ACkLtC,kBDlLsC,CAEvC,CAAA,AAED,QCoKE,WAAY,AACZ,gBCvKa,ADwKb,WAAY,AACZ,cAAe,AAEf,kBACc,AADd,iBAEa,AAGb,kBD7KmC,AC6KnC,kBD7KmC,CAKpC,AGkNO,2BHxNR,QCoKE,WAAY,AACZ,gBCtKa,ADuKb,WAAY,AACZ,cAAe,AAEf,kBACc,AADd,iBAEa,AAGb,kBD1KsC,AC0KtC,kBD1KsC,CAEvC,CAAA,AIdD,WL0FE,OE4MS,AGnST,iBAAkB,AAClB,mBAAqB,CA6BtB,AAjCD,iCHySI,WAAY,AACZ,aAAe,CAChB,AG3SH,gBH8SI,UAAY,CACb,AE/EK,2BChOR,UH4KE,WAAY,AACZ,gBCtKa,ADuKb,WAAY,AACZ,cAAe,AAEf,kBACc,AADd,iBAEa,AAGb,kBG/KsC,AH+KtC,mBG/KsC,AACpC,oBAAc,AAAd,aAAc,AACd,sBAAoB,AAApB,kBAAoB,CAwBvB,CAAA,AAjCD,gBAaI,kBAAmB,AACnB,kBAAoB,CAQrB,AD0MK,2BChOR,gBHyBE,WII2D,AJH3D,WAAY,AACZ,YIoGgB,AJlGhB,cIgGW,AJhGX,gBIkGgB,AD7GZ,gBAAiB,AACjB,eAAiB,CAGpB,AAtBH,2BHmDM,cI0EO,CJzER,CAAA,AGpDL,gBAyBI,iBAAmB,CAOpB,ADgMK,2BChOR,gBHyBE,WII2D,AJH3D,WAAY,AACZ,YIoGgB,AJlGhB,cIgGW,AJhGX,gBIkGgB,ADjGZ,gBAAkB,CAErB,AAhCH,2BHmDM,cI0EO,CJzER,CAAA,AKpDL,aP8IE,MEwJS,CK9QV,AAxBD,qCLySI,WAAY,AACZ,aAAe,CAChB,AK3SH,kBL8SI,UAAY,CACb,AK/SH,kBAII,kBAAmB,AACnB,iBAAkB,AAClB,kBAAoB,CAiBrB,AAvBH,wBL2BE,YIoGgB,AJlGhB,aIgGW,CC/GR,AAdL,+DLyBE,WII2D,AJH3D,WAAY,AAGZ,eIkGgB,CJxFb,AKvCL,wCL0CM,eImFO,AJlFP,WI2DW,CJ1DZ,AK5CL,0CL+CM,UAAY,CACb,AEgLG,2BGhOR,wBL2BE,YIoGgB,AJlGhB,aIgGW,CC/GR,AAdL,+DLyBE,WII2D,AJH3D,WAAY,AAGZ,eIkGgB,CJxFb,AKvCL,wCL0CM,eImFO,AJlFP,WI2DW,CJ1DZ,AK5CL,0CL+CM,UAAY,CACb,CAAA,AKhDL,wBL2BE,YIoGgB,AJlGhB,aIgGW,CCvGR,AAtBL,+DLyBE,WII2D,AJH3D,WAAY,AAGZ,eIkGgB,CJxFb,AKvCL,wCL0CM,eImFO,AJlFP,WI2DW,CJ1DZ,AK5CL,0CL+CM,UAAY,CACb,AEgLG,2BGhOR,wBL2BE,aIoGgB,AJlGhB,aIgGW,CCvGR,AAtBL,+DLyBE,WII2D,AJH3D,WAAY,AAGZ,eIkGgB,CJxFb,AKvCL,wCL0CM,eImFO,AJlFP,WI2DW,CJ1DZ,AK5CL,0CL+CM,UAAY,CACb,CAAA,AMhDL,aRwNE,ME8ES,CMxRV,AAdD,qCNySI,WAAY,AACZ,aAAe,CAChB,AM3SH,kBN8SI,UAAY,CACb,AE/EK,2BIhOR,kBN2BE,qBIoGgB,AJlGhB,aIgGW,CEtHV,AAPH,mDNyBE,WII2D,AJH3D,WAAY,AAGZ,eIkGgB,CJxFb,AMvCL,kCN0CM,eImFO,AJlFP,WI2DW,CJ1DZ,AM5CL,oCN+CM,UAAY,CACb,CAAA,AEgLG,2BIhOR,mBN2BE,qBIoGgB,AJlGhB,aIgGW,CEhHV,AAbH,qDNyBE,WII2D,AJH3D,WAAY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","file":"main.css","sourcesContent":["@font-face {\n  font-family: 'fontello';\n  src: url('../font/fontello.eot?54747244');\n  src: url('../font/fontello.eot?54747244#iefix') format('embedded-opentype'),\n       url('../font/fontello.woff2?54747244') format('woff2'),\n       url('../font/fontello.woff?54747244') format('woff'),\n       url('../font/fontello.ttf?54747244') format('truetype'),\n       url('../font/fontello.svg?54747244#fontello') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?54747244#fontello') format('svg');\n  }\n}\n*/\n\n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.icon-search:before { content: '\\e800'; } /* '' */\n","@charset \"UTF-8\";\n@font-face {\n  font-family: 'fontello';\n  src: url(\"../font/fontello.eot?54747244\");\n  src: url(\"../font/fontello.eot?54747244#iefix\") format(\"embedded-opentype\"), url(\"../font/fontello.woff2?54747244\") format(\"woff2\"), url(\"../font/fontello.woff?54747244\") format(\"woff\"), url(\"../font/fontello.ttf?54747244\") format(\"truetype\"), url(\"../font/fontello.svg?54747244#fontello\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal; }\n\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?54747244#fontello') format('svg');\n  }\n}\n*/\n[class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */ }\n\n.icon-search:before {\n  content: '\\e800'; }\n\n/* '' */\n.l-container {\n  width: auto;\n  max-width: 740px;\n  float: none;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 10px;\n  padding-right: 10px; }\n  @media (min-width: 46.25em) {\n    .l-container {\n      width: auto;\n      max-width: 960px;\n      float: none;\n      display: block;\n      margin-right: auto;\n      margin-left: auto;\n      padding-left: 20px;\n      padding-right: 20px; } }\n\n.l-main {\n  width: auto;\n  max-width: 740px;\n  float: none;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 10px;\n  padding-right: 10px; }\n  @media (min-width: 46.25em) {\n    .l-main {\n      width: auto;\n      max-width: 960px;\n      float: none;\n      display: block;\n      margin-right: auto;\n      margin-left: auto;\n      padding-left: 20px;\n      padding-right: 20px; } }\n\n.l-header {\n  *zoom: 1;\n  padding-top: 20px;\n  padding-bottom: 20px; }\n  .l-header:before, .l-header:after {\n    content: '';\n    display: table; }\n  .l-header:after {\n    clear: both; }\n  @media (min-width: 46.25em) {\n    .l-header {\n      width: auto;\n      max-width: 960px;\n      float: none;\n      display: block;\n      margin-right: auto;\n      margin-left: auto;\n      padding-left: 20px;\n      padding-right: 20px;\n      display: flex;\n      align-items: center; } }\n  .l-header__logo {\n    text-align: center;\n    margin-bottom: 20px; }\n    @media (min-width: 46.25em) {\n      .l-header__logo {\n        float: left;\n        clear: none;\n        width: 58.8%;\n        margin-left: 0;\n        margin-right: 3%;\n        text-align: left;\n        margin-bottom: 0; }\n        .l-header__logo:last-child {\n          margin-right: 0; } }\n  .l-header__form {\n    text-align: center; }\n    @media (min-width: 46.25em) {\n      .l-header__form {\n        float: left;\n        clear: none;\n        width: 38.2%;\n        margin-left: 0;\n        margin-right: 3%;\n        text-align: right; }\n        .l-header__form:last-child {\n          margin-right: 0; } }\n\n.l-featured {\n  *zoom: 1; }\n  .l-featured:before, .l-featured:after {\n    content: '';\n    display: table; }\n  .l-featured:after {\n    clear: both; }\n  .l-featured__item {\n    position: relative;\n    max-height: 220px;\n    margin-bottom: 10px; }\n    .l-featured__item--full {\n      float: left;\n      clear: none;\n      width: 49.5%;\n      margin-left: 0;\n      margin-right: 1%; }\n      .l-featured__item--full:nth-of-type(n) {\n        margin-right: 1%;\n        float: left;\n        clear: none; }\n      .l-featured__item--full:nth-of-type(2n) {\n        margin-right: 0;\n        float: right; }\n      .l-featured__item--full:nth-of-type(2n + 1) {\n        clear: both; }\n      @media (min-width: 46.25em) {\n        .l-featured__item--full {\n          float: left;\n          clear: none;\n          width: 49.5%;\n          margin-left: 0;\n          margin-right: 1%; }\n          .l-featured__item--full:nth-of-type(n) {\n            margin-right: 1%;\n            float: left;\n            clear: none; }\n          .l-featured__item--full:nth-of-type(3n) {\n            margin-right: 0;\n            float: right; }\n          .l-featured__item--full:nth-of-type(3n + 1) {\n            clear: both; } }\n    .l-featured__item--half {\n      float: left;\n      clear: none;\n      width: 49.5%;\n      margin-left: 0;\n      margin-right: 1%; }\n      .l-featured__item--half:nth-of-type(n) {\n        margin-right: 1%;\n        float: left;\n        clear: none; }\n      .l-featured__item--half:nth-of-type(2n) {\n        margin-right: 0;\n        float: right; }\n      .l-featured__item--half:nth-of-type(2n + 1) {\n        clear: both; }\n      @media (min-width: 46.25em) {\n        .l-featured__item--half {\n          float: left;\n          clear: none;\n          width: 24.25%;\n          margin-left: 0;\n          margin-right: 1%; }\n          .l-featured__item--half:nth-of-type(n) {\n            margin-right: 1%;\n            float: left;\n            clear: none; }\n          .l-featured__item--half:nth-of-type(3n) {\n            margin-right: 0;\n            float: right; }\n          .l-featured__item--half:nth-of-type(3n + 1) {\n            clear: both; } }\n\n.l-sub-home {\n  *zoom: 1; }\n  .l-sub-home:before, .l-sub-home:after {\n    content: '';\n    display: table; }\n  .l-sub-home:after {\n    clear: both; }\n  @media (min-width: 46.25em) {\n    .l-sub-home__blog {\n      float: left;\n      clear: none;\n      width: 66.3333333333%;\n      margin-left: 0;\n      margin-right: 1%; }\n      .l-sub-home__blog:nth-of-type(n) {\n        margin-right: 1%;\n        float: left;\n        clear: none; }\n      .l-sub-home__blog:nth-of-type(2n) {\n        margin-right: 0;\n        float: right; }\n      .l-sub-home__blog:nth-of-type(2n + 1) {\n        clear: both; } }\n  @media (min-width: 46.25em) {\n    .l-sub-home__video {\n      float: left;\n      clear: none;\n      width: 32.6666666667%;\n      margin-left: 0;\n      margin-right: 1%; }\n      .l-sub-home__video:nth-of-type(n) {\n        margin-right: 1%;\n        float: left;\n        clear: none; }\n      .l-sub-home__video:nth-of-type(2n) {\n        margin-right: 0;\n        float: right; }\n      .l-sub-home__video:nth-of-type(2n + 1) {\n        clear: both; } }\n\n.l-article-container {\n  float: left;\n  clear: none;\n  width: 100%;\n  margin-left: 0;\n  margin-right: 1%;\n  margin-bottom: 20px; }\n  .l-article-container:last-child {\n    margin-right: 0; }\n  @media (min-width: 32.5em) {\n    .l-article-container {\n      float: left;\n      clear: none;\n      width: 49.5%;\n      margin-left: 0;\n      margin-right: 1%; }\n      .l-article-container:nth-of-type(n) {\n        margin-right: 1%;\n        float: left;\n        clear: none; }\n      .l-article-container:nth-of-type(2n) {\n        margin-right: 0;\n        float: right; }\n      .l-article-container:nth-of-type(2n + 1) {\n        clear: both; } }\n\n.l-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #EEEEEE;\n  border-top: 2px solid #BCBCBC;\n  padding: 40px 0; }\n\n.legal-text {\n  font-size: 10px;\n  text-transform: uppercase;\n  color: #9C9C9C; }\n\n.header-form__input {\n  border: 0;\n  border-bottom: 2px solid #9C9C9C;\n  text-transform: uppercase;\n  padding-bottom: 4px;\n  color: #BCBCBC;\n  transition: all .2s ease; }\n  .header-form__input:focus, .header-form__input:active {\n    outline: none;\n    border-bottom: 2px solid #B22222; }\n  @media (max-width: 46.24em) {\n    .header-form__input {\n      width: 70%;\n      font-size: 22px; } }\n\n.header-form__btn {\n  position: relative;\n  border: 0;\n  background: none; }\n  .header-form__btn::before {\n    content: '\\e800';\n    font-family: \"fontello\";\n    color: #9C9C9C;\n    font-style: normal;\n    font-weight: normal;\n    speak: none;\n    cursor: pointer; }\n\n.header-nav {\n  margin: 10px 0;\n  text-align: center; }\n  @media (min-width: 46.25em) {\n    .header-nav {\n      display: flex;\n      justify-content: space-between;\n      text-align: left; } }\n  .header-nav-wrapper {\n    width: 100%;\n    border-top: 2px solid #BCBCBC;\n    border-bottom: 2px solid #BCBCBC; }\n  @media (max-width: 46.24em) {\n    .header-nav__item {\n      margin: 20px; } }\n  .header-nav__link {\n    color: #3E3E3E;\n    text-transform: uppercase;\n    transition: color .2s ease;\n    font-weight: 500;\n    font-size: 14px; }\n    .header-nav__link:hover {\n      color: #9C9C9C; }\n    .header-nav__link--featured {\n      color: #B22222;\n      border-bottom: 2px solid #B22222; }\n\n.featured-box {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 220px; }\n  .featured-box:hover .featured-box__overlay {\n    opacity: 1; }\n  .featured-box__overlay {\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    background: linear-gradient(to top right, rgba(207, 46, 84, 0.5) 0%, rgba(110, 247, 104, 0.5) 100%);\n    transition: opacity .1s ease; }\n  .featured-box__img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-position: center;\n    background-size: cover; }\n    .featured-box__img--tee {\n      background-image: url(\"http://lorempicsum.com/futurama/440/220/1\"); }\n    .featured-box__img--fins {\n      background-image: url(\"http://lorempicsum.com/futurama/220/220/4\"); }\n    .featured-box__img--shirt {\n      background-image: url(\"http://lorempicsum.com/futurama/220/220/3\"); }\n  .featured-box__title {\n    margin: 0;\n    text-transform: uppercase;\n    color: #fff;\n    font-weight: 600;\n    text-shadow: 3px 3px 4px #3e3e3e;\n    z-index: 2; }\n\n.blog-card {\n  *zoom: 1; }\n  .blog-card:before, .blog-card:after {\n    content: '';\n    display: table; }\n  .blog-card:after {\n    clear: both; }\n  .blog-card__img-col {\n    float: left;\n    clear: none;\n    width: 32.6666666667%;\n    margin-left: 0;\n    margin-right: 1%;\n    padding-right: 5px;\n    margin-top: 0;\n    margin-bottom: 0; }\n    .blog-card__img-col:last-child {\n      margin-right: 0; }\n  .blog-card__header {\n    float: left;\n    clear: none;\n    width: 66.3333333333%;\n    margin-left: 0;\n    margin-right: 1%; }\n    .blog-card__header:last-child {\n      margin-right: 0; }\n  .blog-card__title {\n    margin: 0; }\n  .blog-card__link {\n    text-transform: uppercase;\n    color: #3E3E3E; }\n    .blog-card__link:hover {\n      color: #B22222; }\n\n.footer-nav {\n  margin: 0;\n  text-align: center; }\n  @media (min-width: 46.25em) {\n    .footer-nav {\n      display: flex;\n      text-align: left; } }\n  .footer-nav__item {\n    margin-bottom: 10px; }\n    @media (min-width: 46.25em) {\n      .footer-nav__item {\n        margin-right: -4px; }\n        .footer-nav__item:not(:last-child):after {\n          content: '|';\n          color: #9C9C9C;\n          font-size: 12px;\n          margin-right: 10px; } }\n  .footer-nav__link {\n    color: #9C9C9C;\n    font-size: 12px;\n    text-transform: uppercase;\n    transition: color .2s ease; }\n    .footer-nav__link:hover {\n      color: #3E3E3E; }\n\n.clearfix {\n  *zoom: 1; }\n  .clearfix:before, .clearfix:after {\n    content: '';\n    display: table; }\n  .clearfix:after {\n    clear: both; }\n\n.u-m {\n  margin: 10px; }\n\n.u-mt {\n  margin-top: 10px; }\n\n.u-mr {\n  margin-right: 10px; }\n\n.u-mb {\n  margin-bottom: 10px; }\n\n.u-ml {\n  margin-left: 10px; }\n\n.u-m--large {\n  margin: 20px; }\n\n.u-mt--large {\n  margin-top: 20px; }\n\n.u-mr--large {\n  margin-right: 20px; }\n\n.u-mb--large {\n  margin-bottom: 20px; }\n\n.u-ml--large {\n  margin-left: 20px; }\n\n.logo {\n  margin: 0;\n  text-transform: uppercase;\n  font-weight: 300; }\n\n.sub-header {\n  text-transform: uppercase;\n  font-size: 28px;\n  font-weight: 300; }\n\nhtml {\n  box-sizing: border-box; }\n\n*, *:before, *:after {\n  box-sizing: inherit; }\n\nbody {\n  font-family: 'Open Sans', sans-serif; }\n\nimg {\n  max-width: 100%; }\n\na {\n  text-decoration: none; }\n\nul {\n  padding: 0;\n  list-style: none; }\n\niframe {\n  max-width: 100%; }\n",".l-container {\n  @include center($tablet, $pad: 10px);\n\n  @include mq($tablet) {\n    @include center($desktop, $pad: 20px);\n  };\n}\n\n.l-main {\n  @include center($tablet, $pad: 10px);\n\n  @include mq($tablet) {\n    @include center($desktop, $pad: 20px);\n  };\n}\n","/// Style an element as a column with a gutter.\n/// @param {Number} $ratios [1] - A width relative to its container as a fraction.\n/// @param {Number} $offset [0] - A offset specified as a fraction.\n/// @param {Number} $cycle [0] - Easily create an nth column grid where $cycle equals the number of columns.\n/// @param {Number} $gutter [$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n@mixin j-column($ratios: 1, $offset: 0, $cycle: 0, $gutter: $jeet-gutter) {\n  $side: jeet-get-layout-direction();\n  $opposite-side: jeet-opposite-direction($side);\n  $column-widths: jeet-get-column($ratios, $gutter);\n  $margin-last: 0;\n  $margin-l: $margin-last;\n  $margin-r: nth($column-widths, 2);\n\n  @if $offset != 0 {\n    @if $offset < 0 {\n      $offset: $offset * -1;\n      $offset: nth(jeet-get-column($offset, nth($column-widths, 2)), 1);\n      $margin-last: $offset + nth($column-widths, 2) * 2;\n      $margin-r: $margin-last;\n    } @else {\n      $offset: nth(jeet-get-column($offset, nth($column-widths, 2)), 1);\n      $margin-l: $offset + nth($column-widths, 2);\n    }\n  }\n\n  float: $side;\n  clear: none;\n  width: jeet-get-percentage(nth($column-widths, 1));\n\n  margin: {\n    #{$side}: jeet-get-percentage($margin-l);\n    #{$opposite-side}: jeet-get-percentage($margin-r);\n  };\n\n  @if $cycle != 0 {\n    &:nth-of-type(n) {\n      margin-#{jeet-opposite-direction($side)}: jeet-get-percentage($margin-r);\n      float: $side;\n      clear: none;\n    }\n\n    &:nth-of-type(#{$cycle}n) {\n      margin-#{jeet-opposite-direction($side)}: jeet-get-percentage($margin-last);\n      float: jeet-opposite-direction($side);\n    }\n\n    &:nth-of-type(#{$cycle}n + 1) {\n      clear: both;\n    }\n  } @else {\n    &:last-child {\n      margin-#{jeet-opposite-direction($side)}: jeet-get-percentage($margin-last);\n    }\n  }\n}\n\n/// Get the width of a column and nothing else.\n/// @access private\n/// @param {Number} $ratios [1] - A width relative to its container as a fraction.\n/// @param {Number} $gutter [$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n@function j-column-width($ratios: 1, $gutter: $jeet-gutter) {\n  @return jeet-get-percentage(nth(jeet-get-column($ratios, $gutter), 1));\n}\n\n/// Get the gutter size of a column and nothing else.\n/// @access private\n/// @param {Number} $ratios [1] - A width relative to its container as a fraction.\n/// @param {Number} $gutter [$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n@function j-column-gutter($ratios: 1, $gutter: $jeet-gutter) {\n  @return jeet-get-percentage(nth(jeet-get-column($ratios, $gutter), 2));\n}\n\n/// Style an element as a column without any gutters for a seamless row.\n/// @param {Number} $ratios [1] - A width relative to its container as a fraction.\n/// @param {Number} $offset [0] - A offset specified as a fraction.\n/// @param {Number} $cycle [0] - Easily create an nth column grid where cycle equals the number of columns.\n/// @param {Number} $uncycle [0] - Undo a previous cycle value to allow for a new one.\n@mixin j-span($ratio: 1, $offset: 0, $cycle: 0, $uncycle: 0) {\n  $side: jeet-get-layout-direction();\n  $opposite-side: jeet-opposite-direction($side);\n  $span-width: jeet-get-span($ratio);\n  $margin-r: 0;\n  $margin-l: $margin-r;\n\n  @if $offset != 0 {\n    @if $offset < 0 {\n      $offset: $offset * -1;\n      $margin-r: jeet-get-span($offset);\n    } @else {\n      $margin-l: jeet-get-span($offset);\n    }\n  }\n\n  float: $side;\n  clear: none;\n  width: jeet-get-percentage($span-width);\n\n  margin: {\n    #{$side}: jeet-get-percentage($margin-l);\n    #{$opposite-side}: jeet-get-percentage($margin-r);\n  };\n\n  @if $cycle != 0 {\n    &:nth-of-type(#{$cycle}n) {\n      float: $opposite-side;\n    }\n\n    &:nth-of-type(#{$cycle}n + 1) {\n      clear: both;\n    }\n  }\n\n  @if $uncycle != 0 {\n    &:nth-of-type(#{$uncycle}n) {\n      float: $side;\n    }\n\n    &:nth-of-type(#{$uncycle}n + 1) {\n      clear: none;\n    }\n  }\n\n}\n\n/// Reorder columns without altering the HTML.\n/// @param {Number} $ratios [0] - Specify how far along you want the element to move.\n/// @param {String} $col-or-span [column] - Specify whether the element has a gutter or not.\n/// @param {Number} $gutter [$jeet-gutter] - Specify the gutter width as a percentage of the containers width.\n@mixin j-shift($ratios: 0, $col-or-span: column, $gutter: $jeet-gutter) {\n  $translate: '';\n  $side: jeet-get-layout-direction();\n\n  @if $side == right {\n    $ratios: jeet-replace-nth($ratios, 0, nth($ratios, 1) * -1);\n  }\n\n  @if index(\"column\" \"col\" \"c\", $col-or-span) {\n    $column-widths: jeet-get-column($ratios, $gutter);\n    $translate: nth($column-widths, 1) + nth($column-widths, 2);\n  } @else {\n    $translate: jeet-get-span($ratios);\n  }\n\n  position: relative;\n  left: jeet-get-percentage($translate);\n}\n\n/// Reset an element that has had shift() applied to it.\n@mixin j-unshift() {\n  position: static;\n  left: 0;\n}\n\n/// View the grid and its layers for easy debugging.\n/// @param {String} $color [black] - The background tint applied.\n/// @param {Bool} $important [false] - Whether to apply the style as !important.\n@mixin j-edit($color: black, $important: false) {\n  @if $important {\n    * {\n      background: rgba($color, .05) !important;\n    }\n  } @else {\n    * {\n      background: rgba($color, .05);\n    }\n  }\n}\n\n/// Horizontally center an element.\n/// @param {Number} $max-width [1410px] - The max width the element can be.\n/// @param {Number} $pad [0] - Specify the element's left and right padding.\n@mixin j-center($max-width: $jeet-max-width, $pad: 0) {\n  width: auto;\n  max-width: $max-width;\n  float: none;\n  display: block;\n\n  margin: {\n    right: auto;\n    left: auto;\n  };\n\n  padding: {\n    left: $pad;\n    right: $pad;\n  };\n}\n\n/// Uncenter an element.\n@mixin j-uncenter() {\n  max-width: none;\n\n  margin: {\n    right: 0;\n    left: 0;\n  };\n\n  padding: {\n    left: 0;\n    right: 0;\n  };\n}\n\n/// Stack an element so that nothing is either side of it.\n/// @param {Number} $pad [0] - Specify the element's left and right padding.\n/// @param {Bool | String} $align [false] - Specify the text align for the element.\n@mixin j-stack($pad: 0, $align: false) {\n  $side: jeet-get-layout-direction();\n  $opposite-side: jeet-opposite-direction($side);\n\n  display: block;\n  clear: both;\n  float: none;\n  width: 100%;\n\n  margin: {\n    left: auto;\n    right: auto;\n  };\n\n  &:first-child {\n    margin-#{$side}: auto;\n  }\n\n  &:last-child {\n    margin-#{$opposite-side}: auto;\n  }\n\n  @if $pad != 0 {\n    padding: {\n      left: $pad;\n      right: $pad;\n    }\n  }\n\n  @if ($align is not false) {\n    @if index(\"center\" \"c\", $align) {\n      text-align: center;\n    } @else if index(\"left\" \"l\", $align) {\n      text-align: left;\n    } @else if index(\"right\" \"r\", $align) {\n      text-align: right;\n    }\n  }\n}\n\n/// Unstack an element.\n@mixin j-unstack() {\n  $side: jeet-get-layout-direction();\n  $opposite-side: jeet-opposite-direction($side);\n\n  text-align: $side;\n  display: inline;\n  clear: none;\n  width: auto;\n\n  margin: {\n    left: 0;\n    right: 0;\n  };\n\n  &:first-child {\n    margin-#{$side}: 0;\n  }\n\n  &:last-child {\n    margin-#{jeet-opposite-direction($side)}: 0;\n  }\n}\n/// Center an element on either or both axes. Requires a parent element with relative positioning.\n/// @param {String} $direction [both] - Specify which axes to center the element on.\n@mixin j-align($direction: both) {\n  position: absolute;\n  transform-style: preserve-3d;\n\n  @if index(\"horizontal\" \"h\", $direction) {\n    left: 50%;\n    transform: translateX(-50%);\n  } @else if index(\"vertical\" \"v\", $direction) {\n    top: 50%;\n    transform: translateY(-50%);\n  } @else if index(\"none\", $direction) {\n    top: auto;\n    left: auto;\n    transform: translate(0, 0);\n  } @else {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n/// Apply a clearfix to an element.\n@mixin j-cf() {\n  *zoom: 1;\n\n  &:before, &:after {\n    content: '';\n    display: table;\n  }\n\n  &:after {\n    clear: both;\n  }\n}\n","// Variables\n\n// Breakpoints\n\n$mobile:  320px;\n$phablet: 520px;\n$tablet:  740px;\n$desktop: 960px;\n$wide:    1300px;\n\n// Colors\n$red: #B22222;\n$gray: #9C9C9C;\n$gray-light: #BCBCBC;\n$gray-lighter: #EEEEEE;\n$gray-dark: #3E3E3E;\n\n$margin-base: 10px;\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",".l-header {\n  @include cf;\n\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @include mq($tablet) {\n    @include center($desktop, $pad: 20px);\n    display: flex;\n    align-items: center;\n  };\n\n  &__logo {\n    text-align: center;\n    margin-bottom: 20px;\n\n    @include mq($tablet) {\n      @include col(3/5);\n      text-align: left;\n      margin-bottom: 0;\n\n    }\n  }\n\n  &__form {\n    text-align: center;\n\n    @include mq($tablet) {\n      @include col(2/5);\n\n      text-align: right;\n    }\n  }\n}\n","/// Get  percentage from a given ratio.\n/// @access private\n/// @param {Number} $ratio [1] - The column ratio of the element.\n/// @returns {Number} - The percentage value.\n@function jeet-get-span($ratio: 1) {\n  @return $ratio * 100;\n}\n\n/// Work out the column widths based on the ratio and gutter sizes.\n/// @access private\n/// @param {Number} $ratios [1] - The column ratio of the element.\n/// @param {Number} $gutter [$jeet-gutter] - The gutter for the column.\n/// @returns {List} $width $gutter - A list containing the with and gutter for the element.\n@function jeet-get-column($ratios: 1, $gutter: $jeet-gutter) {\n  $ratios: if(not $jeet-parent-first, jeet-reverse($ratios), $ratios);\n  $width: 100;\n\n  @each $ratio in $ratios {\n    $gutter: $gutter / $width * 100;\n    $width: 100 * $ratio - $gutter + $ratio * $gutter;\n  }\n\n  @return $width $gutter;\n}\n\n/// Get the set layout direction for the project.\n/// @access private\n/// @returns {String} $direction - The layout direction.\n@function jeet-get-layout-direction() {\n  $direction: if($jeet-layout-direction == \"RTL\", right, left);\n\n  @return $direction;\n}\n\n/// Replace a specified list value with a new value (uses built in set-nth() if available).\n/// @access private\n/// @param {List} $list - The list of values you want to alter.\n/// @param {Number} $index - The index of the list item you want to replace.\n/// @param {*} $value - The value you want to replace $index with.\n/// @returns {List} $list - The list with the value replaced or removed.\n/// @throw Error if an invalid index is supplied.\n@function jeet-replace-nth($list, $index, $value) {\n  // Fallback for Sass 3.2\n  @if function-exists(\"set-nth\") != true {\n    $result: ();\n    $index: if($index < 0, length($list) + $index + 1, $index);\n\n    @for $i from 1 through length($list) {\n      $result: append($result, if($i == $index, $value, nth($list, $i)));\n    }\n\n    @return $result;\n  }\n\n  // Sass 3.3\n  $result: set-nth($list, $index, $value);\n\n  @return $result;\n}\n\n/// Reverse a list (progressively enhanced for Sass 3.3).\n/// @access private\n/// @param {List} $list - The list of values you want to reverse.\n/// @returns {List} $result - The reversed list.\n@function jeet-reverse($list) {\n  // Sass 3.2\n  @if function-exists(\"set-nth\") != true {\n    $result: ();\n\n    @for $i from length($list) * -1 through -1 {\n      $item: nth($list, abs($i));\n\n      @if length($item) > 1 and $recursive {\n        $result: append($result, jeet-reverse($item, $recursive));\n      }\n      @else {\n        $result: append($result, $item);\n      }\n    }\n\n    @return $result;\n  }\n\n  // Sass 3.3+\n  @for $i from 1 through ceil(length($list)/2) {\n    $tmp: nth($list, $i);\n    $tmp: if(length($tmp) > 1 and $recursive, reverse($tmp, $recursive), $tmp);\n\n    $list: set-nth($list, $i, nth($list, -$i));\n    $list: set-nth($list, -$i, $tmp);\n  }\n\n  @return $list;\n}\n\n/// Get the opposite direction to a given value.\n/// @access private\n/// @param {String} $dir - The direction you want the opposite of.\n/// @returns {String} - The opposite direction to $dir.\n/// @throw Error if an incorrect string for position is provided.\n@function jeet-opposite-direction($direction) {\n  @if $direction == \"left\" {\n    @return right;\n  } @else if $direction == \"right\" {\n    @return left;\n  } @else if $direction == \"top\" {\n    @return bottom;\n  } @else if $direction == \"bottom\" {\n    @return top;\n  } @else if index(\"ltr\" \"LTR\", $direction) {\n    @return rtl;\n  } @else if index(\"rtl\" \"RTL\", $direction) {\n    @return ltr;\n  } @else {\n    @warn \"`#{$direction}` is not a direction; please make sure your direction is all lowercase.\";\n    @return false;\n  }\n}\n\n/// Perform a value into a percentage value.\n/// @access private\n/// @param {Number} $value - The value which should be converted.\n/// @returns {Number} $value - The percentage.\n@function jeet-get-percentage($value) {\n  @if $value == 0 {\n    @return 0;\n  } @else {\n    @return $value * 1%;\n  }\n}\n",".l-featured {\n  @include cf;\n\n  &__item {\n    position: relative;\n    max-height: 220px;\n    margin-bottom: 10px;\n\n    &--full {\n      @include col(1/2, $cycle: 2, $gutter: 1);\n\n      @include mq(tablet) {\n        @include col(2/4, $cycle: 3, $gutter: 1);\n      };\n    }\n\n    &--half {\n      @include col(1/2, $cycle: 2, $gutter: 1);\n\n      @include mq(tablet) {\n        @include col(1/4, $cycle: 3, $gutter: 1);\n      };\n    }\n  }\n}\n",".l-sub-home {\n  @include cf;\n\n  &__blog {\n    @include mq(tablet) {\n      @include col(2/3, $cycle: 2, $gutter: 1);\n    };\n  }\n\n  &__video {\n    @include mq(tablet) {\n      @include col(1/3, $cycle: 2, $gutter: 1);\n    };\n  }\n}\n\n.l-article-container {\n  @include col(1/1, $gutter: 1);\n  margin-bottom: $margin-base*2;\n\n  @include mq(phablet) {\n    @include col(1/2, $cycle: 2, $gutter: 1);\n  };\n}\n",".l-footer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: $gray-lighter;\n  border-top: 2px solid $gray-light;\n  padding: 40px 0;\n}\n\n.legal-text {\n  font-size: 10px;\n  text-transform: uppercase;\n  color: $gray;\n}\n",".header-form {\n  &__input {\n    border: 0;\n    border-bottom: 2px solid $gray;\n    text-transform: uppercase;\n    padding-bottom: 4px;\n    color: $gray-light;\n    transition: all .2s ease;\n\n    &:focus,\n    &:active {\n      outline: none;\n      border-bottom: 2px solid $red;\n    }\n\n    @include mq($until: tablet) {\n      width: 70%;\n      font-size: 22px;\n    }\n  }\n\n  &__btn {\n    position: relative;\n    border: 0;\n    background: none;\n\n    &::before {\n      content: '\\e800';\n      font-family: \"fontello\";\n      color: $gray;\n      font-style: normal;\n      font-weight: normal;\n      speak: none;\n      cursor: pointer;\n    }\n  }\n}\n",".header-nav {\n  margin: 10px 0;\n  text-align: center;\n\n  @include mq(tablet) {\n    display: flex;\n    justify-content: space-between;\n    text-align: left;\n  };\n\n  &-wrapper {\n    width: 100%;\n    border-top: 2px solid $gray-light;\n    border-bottom: 2px solid $gray-light;\n  }\n\n  &__item {\n    @include mq($until: tablet) {\n      margin: 20px;\n    }\n  }\n\n  &__link {\n    color: $gray-dark;\n    text-transform: uppercase;\n    transition: color .2s ease;\n    font-weight: 500;\n    font-size: 14px;\n\n    &:hover {\n      color: $gray;\n    }\n\n    &--featured {\n      color: $red;\n      border-bottom: 2px solid $red;\n    }\n  }\n}\n",".featured-box {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 220px;\n\n  &:hover &__overlay  {\n    opacity: 1;\n  }\n\n  &__overlay {\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    background: linear-gradient(to top right, rgba(207,46,84,0.5) 0%, rgba(110,247,104,0.5) 100%);\n    transition: opacity .1s ease;\n  }\n\n  &__img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-position: center;\n    background-size: cover;\n\n    &--tee {\n      background-image: url('http://lorempicsum.com/futurama/440/220/1');\n    }\n\n    &--fins {\n      background-image: url('http://lorempicsum.com/futurama/220/220/4');\n    }\n\n    &--shirt {\n      background-image: url('http://lorempicsum.com/futurama/220/220/3');\n    }\n  }\n\n  &__title {\n    margin: 0;\n    text-transform: uppercase;\n    color: #fff;\n    font-weight: 600;\n    text-shadow: 3px 3px 4px rgba($gray-dark, 1);\n    z-index: 2;\n  }\n}\n",".blog-card {\n  @include cf;\n\n  &__img-col {\n    @include col(2/6, $gutter: 1);\n\n    padding-right: 5px;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  &__header {\n    @include col(4/6, $gutter: 1);\n  }\n\n  &__title {\n    margin: 0;\n  }\n\n  &__link {\n    text-transform: uppercase;\n    color: $gray-dark;\n\n    &:hover {\n      color: $red;\n    }\n  }\n}\n",".footer-nav {\n  margin: 0;\n  text-align: center;\n\n  @include mq(tablet) {\n    display: flex;\n    text-align: left;\n  };\n\n  &__item {\n    margin-bottom: $margin-base;\n\n    @include mq(tablet) {\n      margin-right: -4px;\n\n      &:not(:last-child):after {\n        content: '|';\n        color: $gray;\n        font-size: 12px;\n        margin-right: $margin-base;\n      }\n    }\n  }\n\n  &__link {\n    color: $gray;\n    font-size: 12px;\n    text-transform: uppercase;\n    transition: color .2s ease;\n\n    &:hover {\n      color: $gray-dark;\n    }\n  }\n}\n","// Helpers classes\n\n.clearfix {\n  @include cf;\n}\n\n.u-m {\n  margin: $margin-base;\n}\n\n.u-mt {\n  margin-top: $margin-base;\n}\n\n.u-mr {\n  margin-right: $margin-base;\n}\n\n.u-mb {\n  margin-bottom: $margin-base;\n}\n\n.u-ml {\n  margin-left: $margin-base;\n}\n\n.u-m--large {\n  margin: $margin-base*2;\n}\n\n.u-mt--large {\n  margin-top: $margin-base*2;\n}\n\n.u-mr--large {\n  margin-right: $margin-base*2;\n}\n\n.u-mb--large {\n  margin-bottom: $margin-base*2;\n}\n\n.u-ml--large {\n  margin-left: $margin-base*2;\n}\n",".logo {\n  margin: 0;\n  text-transform: uppercase;\n  font-weight: 300;\n}\n\n.sub-header {\n  text-transform: uppercase;\n  font-size: 28px;\n  font-weight: 300;\n}\n","@import \"./variables.scss\";\n@import \"../../node_modules/jeet/scss/jeet/jeet\"; // Grid system\n@import \"./mq-config\";\n\n@import \"./icon-font\";\n\n// Layout\n@import \"./layout/layout\";\n@import \"./layout/header\";\n@import \"./layout/featured\";\n@import \"./layout/sub-home\";\n@import \"./layout/footer\";\n\n// Components\n@import \"./components/header-form\";\n@import \"./components/header-nav\";\n@import \"./components/featured-box\";\n@import \"./components/blog-card\";\n@import \"./components/footer-nav\";\n\n@import \"./helpers/helpers\";\n@import \"./helpers/typography\";\n\n// @include edit; // uncomment to see the grid on screen\n\n// General Styles\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:before, *:after {\n  box-sizing: inherit;\n}\n\nbody {\n  font-family: 'Open Sans', sans-serif;\n}\n\nimg {\n  max-width: 100%;\n}\n\na {\n  text-decoration: none;\n}\n\nul {\n  padding: 0;\n  list-style: none;\n}\n\niframe {\n  max-width: 100%;\n}\n"],"sourceRoot":"/source/"}